@model SAC.Domain.Models.Competitor

@{
    ViewBag.Title = "Create";
}

<div class="well">
    <h2>@ViewBag.Title</h2>
</div>

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Competitor</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.TournamentId)

            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.Archer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Archer, new { htmlAttributes = new { @class = "form-control typeahead" } })
                        @Html.ValidationMessageFor(model => model.Archer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ClassId, "ClassId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClassId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClassId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Bonus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Bonus, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Bonus, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="btn-group">
                            <a href="@Url.Action("Edit", "Tournaments", new { id = Model.TournamentId })" class="btn btn-default"><i class="glyphicon glyphicon-remove-circle"></i> Cancel</a>
                            <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-edit"></i> Create</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4" id="dvClass">

            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/typeahead")
    @Scripts.Render("~/bundles/chosen")
    <script>
        $(function () {
            // Hide default blank item
            $("#ClassId option[value=0]").hide();

            // Enable autocomplete on Archer fields
            var competitors = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: '@Url.Action("Search")/',
                remote: {
                    url: '@Url.Action("Search")/%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('.typeahead').typeahead(null, {
                name: 'Archer',
                display: 'Archer',
                source: competitors
            });
        });

        // Ajax call to update class partial
        $(document).ready(function () {
            $("#ClassId").change(function () {
                var classId = $("#ClassId").val();
                $("#dvClass").load('@Url.Action("GetClass")/' + classId);
            });
        });
    </script>
}
