@model SAC.Domain.Models.Club

@{
    ViewBag.Title = "Edit";
}

<div class="well">
    <h2>@ViewBag.Title</h2>
</div>

@using (Html.BeginForm("Edit", "Clubs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Club</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IconFileName)

        <div class="form-group">
            @Html.Label("Club Image" , htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                <img id="image" src="@Model.IconFileName" style="max-width:75px;max-height:75px;" />
            </div>
            <div class="col-md-9">
                <input type="file" id="files" name="image" class="btn btn-default">
                <output id="list" class="text-info"></output>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityStateZip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CityStateZip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CityStateZip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GeoLocation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GeoLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GeoLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.Partial("BtnSaveDeleteReturn", Model)
            </div>
        </div>
    </div>
}

<div class="panel panel-primary">
    <div class="panel-heading">
        <a href="@Url.Action("Create", "Contacts", new { Id = Model.Id })" class="btn btn-default" style="float:right"><i class="glyphicon glyphicon-user"></i> Add Contact</a>
        <h4>Contacts</h4>
    </div>
    <div class="panel-body">
        <table class="table table-striped table-hover tbl_pointer">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Phone
                    </th>
                    <th>
                        Email
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Contacts)
                {
                    <tr onclick="location.href = '@(Url.Action("Edit", "Contacts", new { id = item.Id }))'">
                        <td>
                            @Html.DisplayFor(model => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Phone)
                        </td>
                        <td>
                            <span>@item.Email</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function handleFileSelect(evt) {
            var files = evt.target.files; // FileList object

            // files is a FileList of File objects. List some properties.
            var output = [];
            for (var i = 0, f; f = files[i]; i++) {
                output.push('<li><strong>', escape(f.name), '</strong> (', f.type || 'n/a', ') - ',
                    f.size, ' bytes, last modified: ',
                    f.lastModifiedDate ? f.lastModifiedDate.toLocaleDateString() : 'n/a',
                    '</li>');
            }
            document.getElementById('list').innerHTML = '<ul>' + output.join('') + '</ul>';

            if (files.length > 0)
            {
                var reader = new FileReader();

                reader.onload = function (e) {
                    // get loaded data and render thumbnail.
                    document.getElementById("image").src = e.target.result;
                };

                // read the image file as a data URL.
                reader.readAsDataURL(this.files[0]);
            }
            else
            {
                document.getElementById("image").src = '@Model.IconFileName';
            }
        }

        document.getElementById('files').addEventListener('change', handleFileSelect, false);
    </script>
}
