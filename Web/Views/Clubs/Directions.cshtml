@model SAC.Domain.Models.Club

@{
    ViewBag.Title = Model.Name;

    var isIos = false;

    var userAgent = HttpContext.Current.Request.UserAgent.ToLower();
    if (userAgent.Contains("iphone;")
        || userAgent.Contains("ipad;"))
    {
        isIos = true;
    }
}

<div class="well well-sm">
    @if (isIos)
    {
        <a href="http://maps.apple.com/maps?q=@Model.GeoLocation" class="btn btn-default" style="float:right">@Model.Address, @Model.CityStateZip</a>
    }
    else
    {
        <a href="http://maps.google.com/maps?q=@Model.GeoLocation" class="btn btn-default" style="float:right">@Model.Address, @Model.CityStateZip</a>
    }
    <h4>@ViewBag.Title</h4>
</div>

<div class="row">
    <div id="myMap" style='position:relative;width:100%;height:400px;'></div>
</div>

@section Scripts {
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetDirections' async defer></script>
    
    <script>
        function GetDirections()
        {
            var map = new Microsoft.Maps.Map('#myMap', {
                credentials: "@System.Environment.GetEnvironmentVariable("sac-bing-maps")"
            });

            Microsoft.Maps.loadModule('Microsoft.Maps.Search', function () {
                var searchManager = new Microsoft.Maps.Search.SearchManager(map);
                var requestOptions = {
                    where: '@Model.GeoLocation',
                    callback: function (answer, userData) {
                        map.entities.push(new Microsoft.Maps.Pushpin(answer.results[0].location));
                        map.setView({ bounds: answer.results[0].bestView });

                        }
                    };
                searchManager.geocode(requestOptions);
            });

        };
    </script>
}